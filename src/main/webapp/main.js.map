{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/angular-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pages/footer/footer.component.css","webpack:///./src/app/pages/footer/footer.component.html","webpack:///./src/app/pages/footer/footer.component.ts","webpack:///./src/app/pages/header/header.component.css","webpack:///./src/app/pages/header/header.component.html","webpack:///./src/app/pages/header/header.component.ts","webpack:///./src/app/pages/security/login/login.component.css","webpack:///./src/app/pages/security/login/login.component.html","webpack:///./src/app/pages/security/login/login.component.ts","webpack:///./src/app/pages/security/registration/registration.component.css","webpack:///./src/app/pages/security/registration/registration.component.html","webpack:///./src/app/pages/security/registration/registration.component.ts","webpack:///./src/app/pages/user/add-user/add-user.component.css","webpack:///./src/app/pages/user/add-user/add-user.component.html","webpack:///./src/app/pages/user/add-user/add-user.component.ts","webpack:///./src/app/pages/user/edit-user/edit-user.component.css","webpack:///./src/app/pages/user/edit-user/edit-user.component.html","webpack:///./src/app/pages/user/edit-user/edit-user.component.ts","webpack:///./src/app/pages/user/list-user/list-user.component.css","webpack:///./src/app/pages/user/list-user/list-user.component.html","webpack:///./src/app/pages/user/list-user/list-user.component.ts","webpack:///./src/app/service/auth-guard.service.ts","webpack:///./src/app/service/auth.service.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/app/util/error-interceptor.ts","webpack:///./src/app/util/forbiddenNameValidator.ts","webpack:///./src/app/util/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;AC9QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACK;AA+C9C;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QA3CjC,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE;gBACP,kEAAyB;gBACzB,iEAAwB;gBACxB,+DAAsB;gBACtB,iEAAwB;gBACxB,gEAAuB;gBACvB,gEAAuB;gBACvB,+DAAsB;gBACtB,+DAAsB;gBACtB,kEAAyB;gBACzB,mEAA0B;gBAC1B,kEAAyB;gBACzB,oEAA2B;gBAC3B,mEAA0B;gBAC1B,qEAA4B;gBAC5B,qEAA4B;gBAC5B,gEAAuB;gBACvB,+DAAsB;gBACtB,sBAAsB;aACvB;YACD,OAAO,EAAE;gBACP,kEAAyB;gBACzB,iEAAwB;gBACxB,+DAAsB;gBACtB,iEAAwB;gBACxB,gEAAuB;gBACvB,gEAAuB;gBACvB,+DAAsB;gBACtB,+DAAsB;gBACtB,kEAAyB;gBACzB,mEAA0B;gBAC1B,kEAAyB;gBACzB,oEAA2B;gBAC3B,mEAA0B;gBAC1B,qEAA4B;gBAC5B,qEAA4B;gBAC5B,gEAAuB;gBACvB,+DAAsB;gBACtB,sBAAsB;aACvB;SACF,CAAC;OACW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;AChDO;AACc;AAEiB;AACI;AACG;AACA;AACc;AAE7B;AAEhE,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,oFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yGAAqB,EAAE;IACtD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wFAAgB,EAAE,WAAW,EAAE,CAAC,4EAAgB,CAAC,EAAE;IAClF,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAiB,EAAE,WAAW,EAAE,CAAC,4EAAgB,CAAC,EAAE;IACpF,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2FAAiB,EAAE,WAAW,EAAE,CAAC,4EAAgB,CAAC,EAAE;IACpF,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,oFAAc,EAAE,WAAW,EAAE,CAAC,4EAAgB,CAAC,EAAE;IACxE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CAC/B,CAAC;AAOF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;YACzC,OAAO,EAAE,CAAE,4DAAY,CAAE;YACzB,SAAS,EAAE,CAAE,4EAAgB,CAAE;SAChC,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1B7B,+DAA+D,+H;;;;;;;;;;;ACA/D,4L;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,SAAS,CAAC;QAClB,qBAAgB,GAAG,KAAK,CAAC;IAK3B,CAAC;IAHC,kCAAW,GAAX;QACE,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC;IACjD,CAAC;IANU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACsC;AAEvB;AACT;AACyB;AACI;AACG;AACA;AAE1B;AAEA,CAAC,UAAU;AACE;AACA;AACA;AAEV;AACqC;AAExC;AACwB;AA8B7E;IAAA;IAAyB,CAAC;IAAb,SAAS;QA3BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,oFAAc;gBACd,wFAAgB;gBAChB,2FAAiB;gBACjB,2FAAiB;gBACjB,+EAAe;gBACf,+EAAe;gBACf,0GAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,mEAAmB;gBACnB,+EAAqB;gBACrB,4FAAuB;gBACvB,sEAAgB;aACjB;YACD,SAAS,EAAE;gBACT,kEAAW;gBACX,kEAAW;gBACX,4BAA4B;gBAC5B,gEAAmB;aACpB;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACpDtB,+DAA+D,mJ;;;;;;;;;;;ACA/D,kDAAkD,2GAA2G,+BAA+B,IAAI,gCAAgC,2LAA2L,yBAAyB,sT;;;;;;;;;;;;;;;;;;ACAlY;AACS;AAO3D;IAIE,yBAAmB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;QACrC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED,kCAAQ,GAAR,cAAY,CAAC;IARF,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,4GAAsC;;SAEvC,CAAC;+EAK4B,wEAAW;OAJ5B,eAAe,CAU3B;IAAD,sBAAC;CAAA;AAV2B;;;;;;;;;;;;ACR5B,+DAA+D,mJ;;;;;;;;;;;ACA/D,kDAAkD,mHAAmH,+BAA+B,IAAI,gCAAgC,0XAA0X,2mC;;;;;;;;;;;;;;;;;;;ACAxjB;AACS;AACQ;AAO3D;IAEE,yBACU,YAA0B,EAC3B,OAAoB;QADnB,iBAAY,GAAZ,YAAY,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAa;IAC1B,CAAC;IAEJ,qCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IATU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,4GAAsC;;SAEvC,CAAC;+EAIwB,2DAAY;YAClB,wEAAW;OAJlB,eAAe,CAW3B;IAAD,sBAAC;CAAA;AAX2B;;;;;;;;;;;;ACT5B,+DAA+D,+J;;;;;;;;;;;ACA/D,gIAAgI,kBAAkB,aAAa,UAAU,kOAAkO,kBAAkB,KAAK,UAAU,mnDAAmnD,yBAAyB,wBAAwB,0BAA0B,uBAAuB,+BAA+B,+BAA+B,yEAAyE,+BAA+B,mCAAmC,+BAA+B,+EAA+E,uBAAuB,sCAAsC,mE;;;;;;;;;;;;;;;;;;;;ACA38E;AAE0B;AAC3B;AACmB;AAO5D;IASE,wBACU,WAAwB,EACxB,MAAc,EACd,OAAoB;QAFpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAa;QAN9B,YAAO,GAAG,KAAK,CAAC;QAQZ,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEH,sCAAa,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,2BAA2B;QAElD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACrC;YACE,KAAK,EAAE,CAAE,EAAE,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAE,CAAE;YACxD,QAAQ,EAAE,CAAE,EAAE,EAAE,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAE,CAAE;SAC7F,CACF,CAAC;IACJ,CAAC;IAEM,8BAAK,GAAZ;QAAA,iBAmBC;QAlBC,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK;YACrF,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;aAClG,SAAS,CACR,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI;gBAC/F,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,cAAc,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YAC/E,IAAI,IAAI,IAAI,IAAI,EAAE;gBAChB,KAAI,CAAC,QAAQ,GAAG,sDAAsD,CAAC;gBACvE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;iBAAM;gBACL,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;gBACjC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CACF,CAAC;IACN,CAAC;IA/CU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,kHAAqC;;SAEtC,CAAC;+EAWuB,0DAAW;YAChB,sDAAM;YACL,iEAAW;OAZnB,cAAc,CAiD1B;IAAD,qBAAC;CAAA;AAjD0B;;;;;;;;;;;;ACX3B,+DAA+D,+K;;;;;;;;;;;ACA/D,gIAAgI,kBAAkB,aAAa,UAAU,4OAA4O,kBAAkB,KAAK,UAAU,8lBAA8lB,qGAAqG,gyBAAgyB,uGAAuG,iqBAAiqB,qGAAqG,kxDAAkxD,aAAa,6xBAA6xB,qGAAqG,gvBAAgvB,uGAAuG,unBAAunB,qGAAqG,8mD;;;;;;;;;;;;;;;;;;;;;ACAx6N;AACgD;AACzD;AACqC;AAClB;AAO5D;IAcE,+BACU,WAAwB,EACxB,MAAc,EACd,MAAmB;QAFnB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAa;QAT7B,YAAO,GAAG;YACR,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;YAC/B,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;YACnC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;SAClC,CAAC;IAMC,CAAC;IAEJ,wCAAQ,GAAR;QAAA,iBAwBC;QAvBC,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE;YACjC,OAAO;SACR;QACD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;aAC7C,SAAS,CACR,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,iCAA+B,IAAM,CAAC,CAAC;YACnD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,KAAI,CAAC,QAAQ,GAAG,WAAW,GAAG,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,0CAA0C,CAAC;gBAC5H,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;iBAAM;gBACL,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,KAAI;QACL,iEAAiE;QACjE,wCAAwC;QACxC,wEAAwE;QACxE,oIAAoI;QACpI,IAAI;SACP,CAAC;IACJ,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAC5C;YACE,EAAE,EAAE,CAAE,EAAE,CAAE;YAEV,MAAM,EAAE,CAAE,CAAC,CAAE;YACb,QAAQ,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAE;YACzD,SAAS,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,2FAAsB,CAAC,MAAM,CAAC,CAAC,CAAE;YACjG,QAAQ,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;YAChE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;YAC/D,KAAK,EAAE,CAAE,EAAE,CAAE;YACb,SAAS,EAAE,CAAE,IAAI,CAAE;YACnB,KAAK,EAAE,CAAE,IAAI,CAAE;YACf,OAAO,EAAE,CAAE,EAAE,CAAE;YACf,OAAO,EAAE,CAAE,EAAE,CAAE;YACf,MAAM,EAAE,CAAE,IAAI,CAAE;YAChB,MAAM,EAAE,CAAE,IAAI,CAAE;YAChB,YAAY,EAAE,EAAE;YAEhB,WAAW,EAAE,CAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAE;YACzC,MAAM,EAAE,CAAC,OAAO,CAAC;YAEjB,QAAQ,EAAE,CAAE,IAAI,CAAE;YAClB,QAAQ,EAAE,CAAE,IAAI,CAAE;YAClB,QAAQ,EAAE,CAAE,EAAE,CAAE;YAChB,QAAQ,EAAE,CAAE,IAAI,CAAE;SACnB,CACF,CAAC;IACJ,CAAC;IA1EU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,uIAA4C;;SAE7C,CAAC;+EAgBuB,0DAAW;YAChB,sDAAM;YACN,iEAAW;OAjBlB,qBAAqB,CA4EjC;IAAD,4BAAC;CAAA;AA5EiC;;;;;;;;;;;;ACXlC,+DAA+D,+J;;;;;;;;;;;ACA/D,gIAAgI,kBAAkB,aAAa,UAAU,4OAA4O,kBAAkB,KAAK,UAAU,2kBAA2kB,2FAA2F,kwBAAkwB,6FAA6F,woBAAwoB,2FAA2F,ovDAAovD,aAAa,yyBAAyyB,2FAA2F,ktBAAktB,6FAA6F,8lBAA8lB,2FAA2F,ujD;;;;;;;;;;;;;;;;;;;;;ACAztN;AACkB;AAC3B;AACmB;AACkB;AAO9E;IAWE,0BACU,WAAwB,EACxB,MAAc,EACd,MAAmB;QAFnB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAa;QAT7B,YAAO,GAAG;YACR,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;YAC/B,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;YACnC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;SAClC,CAAC;IAMC,CAAC;IAEJ,mCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACvC;YACE,EAAE,EAAE,CAAE,EAAE,CAAE;YAEV,MAAM,EAAE,CAAE,CAAC,CAAE;YACb,QAAQ,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAE;YACzD,SAAS,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,2FAAsB,CAAC,MAAM,CAAC,CAAC,CAAE;YACjG,QAAQ,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;YAChE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;YAC/D,KAAK,EAAE,CAAE,EAAE,CAAE;YACb,SAAS,EAAE,CAAE,IAAI,CAAE;YACnB,KAAK,EAAE,CAAE,IAAI,CAAE;YACf,OAAO,EAAE,CAAE,EAAE,CAAE;YACf,OAAO,EAAE,CAAE,EAAE,CAAE;YACf,MAAM,EAAE,CAAE,IAAI,CAAE;YAChB,MAAM,EAAE,CAAE,IAAI,CAAE;YAChB,YAAY,EAAE,EAAE;YAEhB,WAAW,EAAE,CAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAE;YACzC,MAAM,EAAE,CAAC,OAAO,CAAC;YAEjB,QAAQ,EAAE,CAAE,IAAI,CAAE;YAClB,QAAQ,EAAE,CAAE,IAAI,CAAE;YAClB,QAAQ,EAAE,CAAE,EAAE,CAAE;YAChB,QAAQ,EAAE,CAAE,IAAI,CAAE;SACnB,CACF,CAAC;IACJ,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;aACxC,SAAS,CACR,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,4BAA0B,IAAM,CAAC,CAAC,CAAC,0DAA0D;YACzG,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,KAAI,CAAC,QAAQ,GAAG,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,GAAG,0CAA0C,CAAC;gBACvH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;aACpC;iBAAM;gBACL,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACH,CAAC,CACJ,CAAC;IACJ,CAAC;IA7DU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,uHAAwC;;SAEzC,CAAC;+EAauB,0DAAW;YAChB,sDAAM;YACN,iEAAW;OAdlB,gBAAgB,CA+D5B;IAAD,uBAAC;CAAA;AA/D4B;;;;;;;;;;;;ACX7B,wEAAwE,6BAA6B,OAAO,uDAAuD,sBAAsB,OAAO,kDAAkD,ugB;;;;;;;;;;;ACAlP,ghBAAghB,6FAA6F,iwBAAiwB,+FAA+F,+nBAA+nB,6FAA6F,05BAA05B,WAAW,0aAA0a,aAAa,kiBAAkiB,6FAA6F,wsBAAwsB,+FAA+F,qlBAAqlB,6FAA6F,uuBAAuuB,WAAW,mZ;;;;;;;;;;;;;;;;;;;;;;ACA7xM;AAGkB;AAC3B;AACmB;AACrB;AACuC;AAO9E;IAcE,2BACU,WAAwB,EACxB,MAAc,EACd,WAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QATlC,YAAO,GAAG;YACR,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;YAC/B,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE;YACnC,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;SAClC,CAAC;IAMC,CAAC;IAEJ,oCAAQ,GAAR;QAAA,iBAiDC;QAhDC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAC5B,IAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAE9C,IAAI,CAAC,EAAE,EAAE;YACP,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACpC,OAAO;SACR;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACxC;YACE,EAAE,EAAE,CAAE,EAAE,CAAE;YAEV,MAAM,EAAE,CAAE,CAAC,CAAE;YACb,QAAQ,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAE;YACzD,SAAS,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,2FAAsB,CAAC,MAAM,CAAC,CAAC,CAAE;YACjG,QAAQ,EAAE,CAAE,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;YAChE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;YAC/D,KAAK,EAAE,CAAE,EAAE,CAAE;YACb,SAAS,EAAE,CAAE,IAAI,CAAE;YACnB,KAAK,EAAE,CAAE,IAAI,CAAE;YACf,OAAO,EAAE,CAAE,EAAE,CAAE;YACf,OAAO,EAAE,CAAE,EAAE,CAAE;YACf,MAAM,EAAE,CAAE,IAAI,CAAE;YAChB,MAAM,EAAE,CAAE,IAAI,CAAE;YAChB,YAAY,EAAE,MAAM;YAEpB,WAAW,EAAE,CAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAE;YACzC,MAAM,EAAE,CAAC,OAAO,CAAC;YAEjB,QAAQ,EAAE,CAAE,IAAI,CAAE;YAClB,QAAQ,EAAE,CAAE,IAAI,CAAE;YAClB,QAAQ,EAAE,CAAE,EAAE,CAAE;YAChB,QAAQ,EAAE,CAAE,IAAI,CAAE;SACnB,CACF,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;aACzB,SAAS,CACR,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACzD,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAE,CAAC;YAClE,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAC/F,CAAC,CACF,CAAC;IACN,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;aACjD,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACR,cAAI;YACF,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACzD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QACtC,CAAC,EACD,eAAK;YACH,KAAK,CAAC,KAAK,CAAC,CAAC;QACf,CAAC,CACF,CAAC;IACN,CAAC;IAED,4CAAgB,GAAhB;QACE,IAAI,IAAI,CAAC,SAAS,KAAK,UAAU,EAAE;YACjC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,SAAS,KAAK,MAAM,EAAE;YACpC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;SAC7B;IACH,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IACD,yCAAa,GAAb;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,CACxB;YACE,EAAE,EAAE,EAAE;YAEN,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,IAAI;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,IAAI;YACZ,MAAM,EAAE,IAAI;YACZ,YAAY,EAAE,MAAM;YAEpB,WAAW,EAAE,IAAI,IAAI,EAAE;YACvB,MAAM,EAAE,OAAO;YAEf,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,IAAI;SACf,CACF,CAAC;IACJ,CAAC;IA7HU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,0HAAyC;;SAE1C,CAAC;+EAgBuB,0DAAW;YAChB,sDAAM;YACD,iEAAW;OAjBvB,iBAAiB,CA+H7B;IAAD,wBAAC;CAAA;AA/H6B;;;;;;;;;;;;ACd9B,+DAA+D,mK;;;;;;;;;;;ACA/D,0MAA0M,kBAAkB,KAAK,UAAU,q1BAAq1B,aAAa,mRAAmR,gBAAgB,iRAAiR,eAAe,iRAAiR,eAAe,2RAA2R,eAAe,0xCAA0xC,2BAA2B,k1B;;;;;;;;;;;;;;;;;;;;;ACA19G;AAEZ;AACmB;AAGkB;AACnB;AAO3D;IAUE,2BACU,MAAc,EACd,OAAoB,EACpB,OAAoB;QAFpB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAa;QACpB,YAAO,GAAP,OAAO,CAAa;QAV9B,qBAAgB,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAYjF,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAEO,6CAAiB,GAAzB;QAAA,iBAKC;QAJC,IAAM,KAAK,GAAW,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;aACpB,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,EAA3B,CAA2B,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IAED;;;OAGG;IACH,2CAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,uCAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,2CAA2C;QACpF,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;IACvC,CAAC;IAED,sCAAU,GAAV,UAAW,IAAU;QAArB,iBAuBC;QAtBC,IAAI,OAAO,CAAC,4CAA4C,CAAC,EAAE;YACzD,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,IAAI,CAAC;gBACnE,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ;gBACjD,SAAS,GAAG,IAAI,CAAC,QAAQ;gBACzB,SAAS,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC;gBAClE,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAC1G,CAAC;YACF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAClG,IAAI,CAAC,QAAQ,GAAG,sDAAsD,CAAC;gBACvE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;iBAAM;gBACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;qBAC1B,SAAS,CACR,cAAI;oBACF,KAAI,CAAC,iBAAiB,EAAE,CAAC;oBACzB,OAAO,CAAC,GAAG,CAAC,mBAAiB,IAAI,cAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC5D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACtC,CAAC,CACF,CAAC;aACL;SACF;IACH,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAU;QACjB,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;QAC7D,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC7B,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IAvEwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;wDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;mDAAC;IANvB,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,0HAAyC;;SAE1C,CAAC;+EAYkB,sDAAM;YACL,iEAAW;YACX,wEAAW;OAbnB,iBAAiB,CA8E7B;IAAD,wBAAC;CAAA;AA9E6B;;;;;;;;;;;;;;;;;;;ACda;AAEF;AASzC;IAEE,0BAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,qDAAqD;IACrD,sCAAW,GAAX,UACE,KAA6B,EAC7B,KAA0B;QAE1B,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAC7B;YACE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE;SACtC,CACF,CAAC;IACJ,CAAC;IAjBU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG4B,sDAAM;OAFvB,gBAAgB,CAkB5B;IAAD,uBAAC;CAAA;AAlB4B;;;;;;;;;;;;;;;;;;;;;;ACXc;AAEoB;AACd;AAEX;AACG;AAKzC;IAKE,qBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAHpD,aAAQ,GAAG,gBAAgB,CAAC;IAG2B,CAAC;IAEhE,gCAAU,GAAV;QACE,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,6BAA6B,EAAE,GAAG;gBAClC,8BAA8B,EAAE,gDAAgD;aACjF,CAAC;SACH,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,sBAAI,qCAAY;aAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aACD,UAAiB,IAAU;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,CAAC;;;OAHA;IAKD,2BAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QAAxC,iBAqBC;QAnBC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aACtH,IAAI,CACH,0DAAG,CACD,UAAC,IAAU;YACT,OAAO,CAAC,GAAG,CAAC,qCAAqC,GAAG,QAAQ,GAAG,OAAO,GAAG,QAAQ,GAAG,cAAc,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC;gBACpH,eAAe,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC;YAC/F,IACE,CAAC,IAAI,IAAI,IAAI,CAAC;gBACd,CAAC,IAAI,KAAK,SAAS,CAAC,EACpB;gBACA,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;aACjC;iBAAM;gBACL,KAAI,CAAC,GAAG,CAAC,6BAA2B,QAAQ,iBAAY,QAAU,CAAC,CAAC;gBACpE,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aAC3D;QACH,CAAC,CACF,EACD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,OAAO,CAAC,CAAC,CAC5C,CAAC;IACN,CAAC;IAED,4BAAM,GAAN;QACE,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAClF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,aAAa;IACzC,CAAC;IAEO,yBAAG,GAAX,UAAY,OAAe;QACzB,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC;IAC3C,CAAC;IAEM,8BAAQ,GAAf;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAM,KAAK,GAAG,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC;QAC/C,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5B,CAAC;IAED;;;;;OAKG;IACK,iCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAsBC;QAtBuB,mDAAuB;QAC7C,OAAO,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAElD,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBACvC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;aAC1C;iBAAM,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC/B,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;aAC1C;iBAAM,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC/B,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;aAChD;YAED,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAED,+FAA+F;IAC/F,wCAAkB,GAAlB,cAAuB,IAAI,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC,CAAC,CAAC;IAhGrE,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM0B,+DAAU,EAAkB,sDAAM;OALjD,WAAW,CAkGvB;IAAD,kBAAC;CAAA;AAlGuB;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AAGE;AACP;AACW;AACc;AACtB;AAKzC;IAIE,qBACU,IAAgB,EAChB,OAAoB,EACpB,MAAc;QAFd,SAAI,GAAJ,IAAI,CAAY;QAChB,YAAO,GAAP,OAAO,CAAa;QACpB,WAAM,GAAN,MAAM,CAAQ;QALhB,WAAM,GAAG,UAAU,CAAC;IAMzB,CAAC;IAEJ,gCAAU,GAAV;QACE,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,6BAA6B,EAAE,GAAG;gBAClC,8BAA8B,EAAE,gDAAgD;gBAChF,eAAe,EAAE,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;aACrD,CAAC;SACH,CAAC;QACF,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,8BAAQ,GAAR;QAAA,iBAMC;QALC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aAC3D,IAAI,CACH,0DAAG,CAAC,eAAK,IAAI,YAAI,CAAC,GAAG,CAAC,iBAAe,KAAK,CAAC,MAAM,YAAS,CAAC,EAA9C,CAA8C,CAAC,EAC5D,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAC7C,CAAC;IACJ,CAAC;IAED,gCAAU,GAAV,UAAW,IAAmB;QAA9B,iBAQC;QAPC,IAAM,EAAE,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;QACrD,IAAM,GAAG,GAAM,IAAI,CAAC,MAAM,SAAI,EAAI,CAAC;QAEnC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CACxD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,yBAAuB,EAAI,CAAC,EAArC,CAAqC,CAAC,EAC/C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,YAAY,CAAC,CAAC,CACjD,CAAC;IACJ,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAU;QAAlB,iBAOC;QANC,IAAM,GAAG,GAAM,IAAI,CAAC,MAAM,SAAI,EAAI,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CACrD,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,yBAAuB,EAAI,CAAC,EAArC,CAAqC,CAAC,EAC/C,0DAAG,CAAC,UAAC,GAAS,IAAK,YAAI,CAAC,GAAG,CAAC,qCAAmC,GAAG,CAAC,WAAa,CAAC,EAA9D,CAA8D,CAAC,EAClF,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,gBAAc,EAAI,CAAC,CAAC,CACvD,CAAC;IACJ,CAAC;IAED,uCAAiB,GAAjB,UAAkB,QAAgB;QAAlC,iBAOC;QANC,IAAM,GAAG,GAAM,IAAI,CAAC,MAAM,kBAAa,QAAU,CAAC;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;aAC/C,IAAI,CACH,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,8BAA4B,QAAU,CAAC,EAAhD,CAAgD,CAAC,EAC1D,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,gCAA8B,QAAU,CAAC,CAAC,CAC7E,CAAC;IACN,CAAC;IAED,gCAAU,GAAV,UAAW,IAAU;QAArB,iBAKC;QAJC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CAC7D,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,yBAAuB,IAAI,CAAC,MAAQ,CAAC,EAA9C,CAA8C,CAAC,EACxD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAChD,CAAC;IACJ,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAU;QAAlB,iBAKC;QAJC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CACpE,0DAAG,CAAC,UAAC,GAAS,IAAK,YAAI,CAAC,GAAG,CAAC,0BAAwB,GAAG,CAAC,MAAQ,CAAC,EAA9C,CAA8C,CAAC,EAClE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,SAAS,CAAC,CAAC,CAC9C,CAAC;IACJ,CAAC;IAED,+CAA+C,CAAC,yBAAyB;IACzE,iCAAW,GAAX,UAAY,IAAY;QAAxB,iBAWC;QAVC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;YAChB,+CAA+C;YAC/C,OAAO,+CAAE,CAAC,EAAE,CAAC,CAAC;SACf;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,MAAM,IAAG,kBAAgB,IAAM,GAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,IAAI,CACxF,0DAAG,CAAC,WAAC,IAAI,YAAI,CAAC,GAAG,CAAC,8BAA2B,IAAI,OAAG,CAAC,EAA5C,CAA4C,CAAC,EACtD,iEAAU,CACR,IAAI,CAAC,WAAW,CAAS,aAAa,EAAE,EAAE,CAAC,CAC5C,CACF,CAAC;IACJ,CAAC;IAEO,yBAAG,GAAX,UAAY,OAAe;QACzB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED;;;;;OAKG;IACK,iCAAW,GAAnB,UAAwB,SAAuB,EAAE,MAAU;QAA3D,iBAwBC;QAxBuB,mDAAuB;QAC7C,OAAO,UAAC,KAAU;YAEhB,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,KAAI,CAAC,GAAG,CAAI,SAAS,iBAAY,KAAK,CAAC,OAAS,CAAC,CAAC;YAElD,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBACvC,uCAAuC;gBACvC,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;aACnD;iBAAM,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC/B,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;aAClD;iBAAM,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBAC/B,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;gBAC/C,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;gBACtB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACrC;YAED,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACzB,CAAC,CAAC;IACJ,CAAC;IAxHU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAMgB,+DAAU;YACP,yDAAW;YACZ,sDAAM;OAPb,WAAW,CA0HvB;IAAD,kBAAC;CAAA;AA1HuB;;;;;;;;;;;;;;;;;;;;;ACZ6B;AAQvB;AACW;AAIJ;AAGrC;IAEI,0BAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,oCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAClD,+BAA+B;QAC/B,0BAA0B;QAC1B,oDAAoD;QAHxD,iBAuDC;QAlDG,iBAAiB;QACjB,qCAAqC;QACrC,wDAAwD;QACxD,mCAAmC;QACnC,UAAU;QAEV,kCAAkC;QAClC,WAAW;QACX,mCAAmC;QACnC,IAAI;QACJ,wBAAwB;QAExB,0DAA0D;QAC1D,6EAA6E;QAC7E,sDAAsD;QACtD,uFAAuF;QACvF,mIAAmI;QAEnI,+BAA+B;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aACtB,IAAI,CACD,0DAAG,CACC,UAAC,KAAqB;YAClB,IAAI,KAAK,YAAY,iEAAY,EAAE;gBAC/B,wBAAwB;aAC3B;QACL,CAAC,EACD,UAAC,KAAU;YACP,4BAA4B;YAC5B,IAAI,KAAK,YAAY,sEAAiB,EAAE;gBACpC,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,oDAAoD;oBACpD,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,gCAAgC;iBACxE;gBACD,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,oDAAoD;oBACpD,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,4CAA4C;iBACvF;gBACD,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBACtB,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;iBACvC;gBACD,OAAO,CAAC,KAAK,CACT,yCAAuC,KAAK,CAAC,MAAM,OAAI;qBACvD,eAAa,KAAK,CAAC,KAAO,EAC7B,CAAC;aACL;QACL,CAAC,CACJ,CACJ,CAAC;QACF,gBAAgB;IACxB,CAAC;IAED,sBAAW,oCAAM;aAAjB;YACI,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,sDAAM,CAAC,CAAC;QACrC,CAAC;;;OAAA;IA/DQ,gBAAgB;QAD5B,gEAAU,EAAE;+EAGqB,sDAAQ;OAF7B,gBAAgB,CAgE5B;IAAD,uBAAC;CAAA;AAhE4B;;;;;;;;;;;;;ACd7B;AAAA;AAAO,SAAS,sBAAsB,CAAC,MAAc;IACjD,OAAO,UAAC,OAAwB;QAC5B,IAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,SAAS,CAAC,CAAC,CAAC,EAAC,eAAe,EAAE,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACxE,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACF;AAC4B;AAEd;AAErE,qDAAqD;AAE9C,IAAM,wBAAwB,GAAG;IACpC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,mEAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;CAC1E,CAAC;AAEK,IAAM,UAAU,GAAG;IACtB,KAAK,EAAE;QACH,SAAS,EAAE,YAAY;KAC1B;IACD,OAAO,EAAE;QACL,SAAS,EAAE,YAAY;QACvB,cAAc,EAAE,UAAU;QAC1B,aAAa,EAAE,IAAI;QACnB,kBAAkB,EAAE,WAAW;KAClC;CACJ,CAAC;AAEK,IAAM,mBAAmB,GAAG;IAC/B,sDAAsD;IACtD,6DAA6D;IAE7D,EAAC,OAAO,EAAE,6DAAW,EAAE,QAAQ,EAAE,kFAAiB,EAAE,IAAI,EAAE,CAAC,iEAAe,CAAC,EAAC;IAC5E,EAAC,OAAO,EAAE,kEAAgB,EAAE,QAAQ,EAAE,UAAU,EAAC;CACpD,CAAC;AAEF;IAAA;IAAoB,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;AChCrB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEvC;AAElB,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,cAAc,GAAG,GAAG,CAAC,EAAnC,CAAmC,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport * as Material from '@angular/material';\n\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    Material.MatToolbarModule,\n    Material.MatButtonModule,\n    Material.MatCardModule,\n    Material.MatDialogModule,\n    Material.MatInputModule,\n    Material.MatTableModule,\n    Material.MatIconModule,\n    Material.MatMenuModule,\n    Material.MatDividerModule,\n    Material.MatCheckboxModule,\n    Material.MatDividerModule,\n    Material.MatPaginatorModule,\n    Material.MatGridListModule,\n    Material.MatDatepickerModule,\n    Material.MatNativeDateModule,\n    Material.MatRadioModule,\n    Material.MatListModule\n    // MatMomentDateModule\n  ],\n  exports: [\n    Material.MatToolbarModule,\n    Material.MatButtonModule,\n    Material.MatCardModule,\n    Material.MatDialogModule,\n    Material.MatInputModule,\n    Material.MatTableModule,\n    Material.MatIconModule,\n    Material.MatMenuModule,\n    Material.MatDividerModule,\n    Material.MatCheckboxModule,\n    Material.MatDividerModule,\n    Material.MatPaginatorModule,\n    Material.MatGridListModule,\n    Material.MatDatepickerModule,\n    Material.MatNativeDateModule,\n    Material.MatRadioModule,\n    Material.MatListModule\n    // MatMomentDateModule\n  ]\n})\nexport class AngularMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './pages/security/login/login.component';\nimport { AddUserComponent } from './pages/user/add-user/add-user.component';\nimport { ListUserComponent } from './pages/user/list-user/list-user.component';\nimport { EditUserComponent } from './pages/user/edit-user/edit-user.component';\nimport { RegistrationComponent } from './pages/security/registration/registration.component';\n\nimport { AuthGuardService } from './service/auth-guard.service';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegistrationComponent },\n  { path: 'add-user', component: AddUserComponent, canActivate: [AuthGuardService] },\n  { path: 'list-user', component: ListUserComponent, canActivate: [AuthGuardService] },\n  { path: 'edit-user', component: EditUserComponent, canActivate: [AuthGuardService] },\n  { path: '', component: LoginComponent, canActivate: [AuthGuardService] },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ],\n  providers: [ AuthGuardService ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section [class.alternate-theme]='isAlternateTheme'>\\n    <app-header></app-header>\\n    <router-outlet></router-outlet>\\n    <app-footer></app-footer>\\n</section>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'userapp';\n  isAlternateTheme = false;\n\n  toggleTheme() {\n    this.isAlternateTheme = !this.isAlternateTheme;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './pages/security/login/login.component';\nimport { AddUserComponent } from './pages/user/add-user/add-user.component';\nimport { EditUserComponent } from './pages/user/edit-user/edit-user.component';\nimport { ListUserComponent } from './pages/user/list-user/list-user.component';\n\nimport { UserService } from './service/user.service';\n\nimport { ReactiveFormsModule } from '@angular/forms'; // bug fix\nimport { AngularMaterialModule } from './angular-material.module';\nimport { HeaderComponent } from './pages/header/header.component';\nimport { FooterComponent } from './pages/footer/footer.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegistrationComponent } from './pages/security/registration/registration.component';\n\nimport { AuthService } from './service/auth.service';\nimport { httpInterceptorProviders, datePickerProviders } from './util/index';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    AddUserComponent,\n    EditUserComponent,\n    ListUserComponent,\n    HeaderComponent,\n    FooterComponent,\n    RegistrationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    BrowserAnimationsModule, // bug fix\n    HttpClientModule\n  ],\n  providers: [\n    UserService,\n    AuthService,\n    // httpInterceptorProviders,\n    datePickerProviders\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar style='height:20px;'>\\n<!-- <mat-toolbar> -->\\n  <div *ngIf='authSvc.loggedInUser' class='hint-msg'>Your are logged in as:  {{authSvc.loggedInUser.lastName}}, {{authSvc.loggedInUser.firstName}}</div>\\n  <div *ngIf='!authSvc.loggedInUser' class='hint-msg'>You are NOT logged in!</div>\\n  \\n  <span class='spacer'></span>\\n    <div class='hint-msg'>© Copyright Angular-User-CRUD. {{buildDate | date:'yyyy'}}</div>\\n  <span class='spacer'></span>\\n  \\n  <div class='hint-msg' *ngIf='authSvc.loggedInUser'>Thank you for visiting! <a routerLink='/login'>Logout</a></div>\\n  <div class='hint-msg' *ngIf='!authSvc.loggedInUser'>Please <a routerLink='/login'>login</a> to enjoy all our cool features!</div>\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  buildDate: Date;\n\n  constructor(public authSvc: AuthService) {\n    this.buildDate = new Date();\n  }\n\n  ngOnInit() {}\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-toolbar style='height:20px;'>\\n  <span class='spacer'></span>\\n  <div *ngIf='authSvc.loggedInUser' class='hint-msg'>Your are logged in as:  {{authSvc.loggedInUser.lastName}}, {{authSvc.loggedInUser.firstName}}</div>\\n  <div *ngIf='!authSvc.loggedInUser' class='hint-msg'>You are NOT logged in!</div>\\n  <span class='spacer'></span>\\n  <div class='hint-msg' *ngIf='authSvc.loggedInUser'><a routerLink='/login'>Logout</a></div>\\n  <div class='hint-msg' *ngIf='!authSvc.loggedInUser'><a routerLink='/login'>Login</a></div>\\n</mat-toolbar>\\n\\n<mat-toolbar color='primary' style='height:40px;'>\\n  <button mat-icon-button routerLink='/list-user'>\\n    <mat-icon>home</mat-icon>\\n  </button>  \\n  <span class='spacer'></span>\\n  <span>Angular User CRUD</span>\\n  <span class='spacer'></span>\\n  <button mat-icon-button [matMenuTriggerFor]='menu'>\\n    <mat-icon><i class='material-icons'>view_headline</i></mat-icon>\\n  </button>\\n\\n  <mat-menu #menu='matMenu'>\\n    <button mat-menu-item routerLink='/login'>\\n      <mat-icon>home</mat-icon>\\n      <span>Login</span>\\n    </button>\\n    <button mat-menu-item routerLink='/list-user'>\\n      <mat-icon>list</mat-icon>\\n      <span>List Users</span>\\n    </button>\\n    <button mat-menu-item routerLink='/add-user'>\\n      <mat-icon>playlist_add</mat-icon>\\n      <span>Add User</span>\\n    </button>\\n    <button mat-menu-item routerLink='/register'>\\n      <mat-icon>spellcheck</mat-icon>\\n      <span>Register</span>\\n    </button>\\n    <button mat-menu-item routerLink='/login'>\\n      <mat-icon>settings_power</mat-icon>\\n      <span>Logout</span>\\n    </button>\\n    <button mat-menu-item (click)='toggleTheme()'>Toggle Theme</button>\\n  </mat-menu>\\n</mat-toolbar>\\n\"","import { Component } from '@angular/core';\nimport { AppComponent } from '../../app.component';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  constructor(\n    private appComponent: AppComponent,\n    public authSvc: AuthService\n  ) {}\n\n  toggleTheme() {\n    this.appComponent.toggleTheme();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NlY3VyaXR5L2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- <mat-card *ngIf='errorMsg'>\\n  <mat-card-content align='center'>\\n    <div *ngIf='errorMsg' [ngClass]=\\\"{'error': errorMsg}\\\">\\n      {{errorMsg}}\\n    </div>\\n  </mat-card-content>\\n</mat-card> -->\\n<mat-card>\\n  <mat-card-title align='center'>\\n\\n    <mat-card *ngIf='errorMsg'>\\n        <mat-card-content align='center'>\\n            <div *ngIf='errorMsg' [ngClass]=\\\"{'error': errorMsg}\\\">{{errorMsg}}</div>\\n        </mat-card-content>\\n    </mat-card>\\n\\n    Login\\n    <mat-divider></mat-divider>\\n    <div class='hint-msg'>Hint : userone@gmail.com - password</div>\\n  </mat-card-title>\\n  <mat-card-content align='center'>\\n    <form [formGroup]='loginForm' class='login-form-container'>\\n      <mat-form-field>\\n        <input matInput type='text' formControlName='email' placeholder='E-Mail' required>\\n        <mat-error *ngIf=\\\"loginForm.controls['email'].errors?.required\\\">Email is required</mat-error>\\n        <mat-error *ngIf=\\\"loginForm.controls['email'].errors?.minlength\\\">Email must be at least 2 characters long</mat-error>\\n        <mat-error *ngIf=\\\"loginForm.controls['email'].errors?.email\\\">Email must be a valid E-Mail address</mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput type='password' formControlName='password' placeholder='Password' required>\\n        <mat-error *ngIf=\\\"loginForm.controls['password'].errors?.required\\\">Password is required</mat-error>\\n        <mat-error *ngIf=\\\"loginForm.controls['password'].errors?.minlength\\\">Password must be at least 5 characters long</mat-error>\\n        <mat-error *ngIf=\\\"loginForm.controls['password'].errors?.maxlength\\\">Password must be at most 20 characters long</mat-error>\\n      </mat-form-field>\\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions align='right'>\\n      <button mat-raised-button color='primary' class='btn' [disabled]='loginForm.invalid' (click)='login()'>Login</button>\\n      <a mat-raised-button routerLink='/register' color='warn'>Register</a>\\n  </mat-card-actions>\\n</mat-card>\\n\\n<!--p>Form Value: {{loginForm.value | json }}</p>\\n<p>Form status: {{loginForm.status | json }}</p>\\n<p>Name value: {{loginForm.get('email').value }}</p>\\n\\n<p>Username errors : {{loginForm.controls['email'].errors && loginForm.controls['email'].dirty}}</p>\\n<p>Username is valid : {{loginForm.controls['email'].valid}}</p>\\n\\n<p>Pwd show errors : {{loginForm.controls['password'].errors && loginForm.controls['password'].dirty}}</p>\\n<p>Pwd valid : {{loginForm.controls['password'].valid}}</p-->\\n\\n\\n  <!-- https://www.youtube.com/watch?v=ZGWOc37kQkw -->\"","import { Component } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  loginForm: FormGroup;\n  submitted: false;\n  invalidLogin: false;\n\n  loading = false;\n  errorMsg: any;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authSvc: AuthService,\n    ) {\n      this.initLoginForm();\n    }\n\n  initLoginForm() {\n    this.authSvc.logout(); // First reset login status\n\n    this.loginForm = this.formBuilder.group(\n      {\n        email: [ '', [ Validators.required, Validators.email ] ],\n        password: [ '', [ Validators.required, Validators.minLength(5), Validators.maxLength(20) ] ]\n      }\n    );\n  }\n\n  public login() {\n    console.log('LoginComponent: login() : email ' + this.loginForm.controls['email'].value +\n      ' password ' + this.loginForm.controls['password'].value);\n    this.loading = true;\n    this.authSvc.login(this.loginForm.controls['email'].value, this.loginForm.controls['password'].value)\n      .subscribe(\n        user => {\n          console.log('Login: You are trying to log in as ' + this.loginForm.controls['email'].value + ', ' +\n            this.loginForm.controls['password'].value + ' null data? ' + (user == null));\n          if (user == null) {\n            this.errorMsg = 'Login failed: Username and/or password do not match!';\n            this.router.navigate(['login']);\n          } else {\n            this.errorMsg = null;\n            this.authSvc.loggedInUser = user;\n            this.router.navigate(['list-user']);\n          }\n        }\n      );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NlY3VyaXR5L3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <mat-card *ngIf='errorMsg'>\\n  <mat-card-content align='center'>\\n    <div *ngIf='errorMsg' [ngClass]=\\\"{'error': errorMsg}\\\">\\n      {{errorMsg}}\\n    </div>\\n  </mat-card-content>\\n</mat-card> -->\\n\\n<mat-card>\\n    <mat-card-title align='center'>\\n\\n      <mat-card *ngIf='errorMsg'>\\n          <mat-card-content align='center'>\\n              <div *ngIf='errorMsg' [ngClass]=\\\"{'error': errorMsg}\\\">{{errorMsg}}</div>\\n          </mat-card-content>\\n      </mat-card>\\n\\n      Registration Form\\n      <mat-divider></mat-divider>\\n    </mat-card-title>\\n    <mat-card-content align='center'>\\n      <!-- <form [formGroup]='registrationForm' class='login-form-container'> -->\\n      <form [formGroup]='registrationForm' class='normal-form'>\\n        <input type='hidden' formControlName='id'>\\n        <input type='hidden' formControlName='userId'>\\n        <mat-grid-list cols='2' rowHeight='300px'>\\n          <mat-grid-tile>\\n            <div class='controls-container'>\\n              <mat-form-field [ngClass]=\\\"{'error': registrationForm.controls['username'].errors && registrationForm.controls['username'].dirty}\\\">\\n                <input matInput type='text' formControlName='username' placeholder='E-Mail' required>\\n                <div *ngIf=\\\"registrationForm.controls['username'].invalid && (registrationForm.controls['username'].dirty || registrationForm.controls['username'].touched)\\\" class='error-msg'>\\n                  <div *ngIf=\\\"registrationForm.controls['username'].errors.required\\\">Username is required.</div>\\n                  <div *ngIf=\\\"registrationForm.controls['username'].errors.minlength\\\">Username must be at least 2 characters long.</div>\\n                  <div *ngIf=\\\"registrationForm.controls['username'].errors.patternInvalid\\\">Username must be a valid E-Mail address.</div>\\n                </div>\\n              </mat-form-field>\\n              <mat-form-field [ngClass]=\\\"{'error': registrationForm.controls['firstName'].errors && registrationForm.controls['firstName'].dirty}\\\">\\n                <input matInput type='text' formControlName='firstName' placeholder='First Name' required>\\n                <div *ngIf=\\\"registrationForm.controls['firstName'].invalid && (registrationForm.controls['firstName'].dirty || registrationForm.controls['firstName'].touched)\\\" class='error-msg'>\\n                  <div *ngIf=\\\"registrationForm.controls['firstName'].errors.required\\\">First Name is required.</div>\\n                  <div *ngIf=\\\"registrationForm.controls['firstName'].errors.minlength\\\">First Name must be at least 2 characters long.</div>\\n                </div>\\n              </mat-form-field>\\n              <mat-form-field [ngClass]=\\\"{'error': registrationForm.controls['lastName'].errors && registrationForm.controls['lastName'].dirty}\\\">\\n                <input matInput type='text' formControlName='lastName' placeholder='Last Name' required>\\n                <div *ngIf=\\\"registrationForm.controls['lastName'].invalid && (registrationForm.controls['lastName'].dirty || registrationForm.controls['lastName'].touched)\\\" class='error-msg'>\\n                  <div *ngIf=\\\"registrationForm.controls['lastName'].errors.required\\\">Last Name is required.</div>\\n                  <div *ngIf=\\\"registrationForm.controls['lastName'].errors.minlength\\\">Last Name must be at least 2 characters long.</div>\\n                </div>\\n              </mat-form-field>\\n            </div>\\n          </mat-grid-tile>\\n          <mat-grid-tile>\\n            <div class='controls-container'>\\n              <mat-form-field>\\n                <input matInput type='password' formControlName='password' placeholder='Password' required>\\n                <div *ngIf=\\\"registrationForm.controls['password'].invalid && (registrationForm.controls['password'].dirty || registrationForm.controls['password'].touched)\\\" class='error-msg'>\\n                  <div *ngIf=\\\"registrationForm.controls['password'].errors.required\\\">Password is required.</div>\\n                  <div *ngIf=\\\"registrationForm.controls['password'].errors.minlength\\\">Password must be at least 5 characters long.</div>\\n                  <div *ngIf=\\\"registrationForm.controls['password'].errors.maxlength\\\">Password must be at most 10 characters long.</div>\\n                </div>\\n              </mat-form-field>\\n              <div class='add-bottom-padding'>\\n                <label mat-subheader>Gender: </label>\\n                <mat-radio-group formControlName='gender'>\\n                  <mat-radio-button *ngFor=\\\"let gender of genders\\\" [value]='gender.value'>\\n                    {{gender.type}}\\n                  </mat-radio-button>\\n                  <!-- <mat-radio-button value='MALE'>Male</mat-radio-button>\\n                  <mat-radio-button value='FEMALE'>Female</mat-radio-button>\\n                  <mat-radio-button value='OTHER'>Other</mat-radio-button> -->\\n                </mat-radio-group>\\n              </div>            \\n              <mat-form-field>\\n                <input formControlName='dateOfBirth' matInput [matDatepicker]='picker' placeholder='Date of Birth'>\\n                <mat-datepicker-toggle matSuffix [for]='picker'></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n  \\n        <!--mat-form-field [ngClass]=\\\"{'error': registrationForm.controls['username'].errors && registrationForm.controls['username'].dirty}\\\">\\n          <input matInput type='text' formControlName='username' placeholder='E-Mail' required>\\n          <div *ngIf=\\\"registrationForm.controls['username'].invalid && (registrationForm.controls['username'].dirty || registrationForm.controls['username'].touched)\\\" class='error-msg'>\\n            <div *ngIf=\\\"registrationForm.controls['username'].errors.required\\\">Username is required.</div>\\n            <div *ngIf=\\\"registrationForm.controls['username'].errors.minlength\\\">Username must be at least 2 characters long.</div>\\n            <div *ngIf=\\\"registrationForm.controls['username'].errors.patternInvalid\\\">Username must be a valid E-Mail address.</div>\\n          </div>\\n        </mat-form-field>\\n        <mat-form-field [ngClass]=\\\"{'error': registrationForm.controls['firstName'].errors && registrationForm.controls['firstName'].dirty}\\\">\\n          <input matInput type='text' formControlName='firstName' placeholder='First Name' required>\\n          <div *ngIf=\\\"registrationForm.controls['firstName'].invalid && (registrationForm.controls['firstName'].dirty || registrationForm.controls['firstName'].touched)\\\" class='error-msg'>\\n            <div *ngIf=\\\"registrationForm.controls['firstName'].errors.required\\\">First Name is required.</div>\\n            <div *ngIf=\\\"registrationForm.controls['firstName'].errors.minlength\\\">First Name must be at least 2 characters long.</div>\\n          </div>\\n        </mat-form-field>\\n        <mat-form-field [ngClass]=\\\"{'error': registrationForm.controls['lastName'].errors && registrationForm.controls['lastName'].dirty}\\\">\\n          <input matInput type='text' formControlName='lastName' placeholder='Last Name' required>\\n          <div *ngIf=\\\"registrationForm.controls['lastName'].invalid && (registrationForm.controls['lastName'].dirty || registrationForm.controls['lastName'].touched)\\\" class='error-msg'>\\n            <div *ngIf=\\\"registrationForm.controls['lastName'].errors.required\\\">Last Name is required.</div>\\n            <div *ngIf=\\\"registrationForm.controls['lastName'].errors.minlength\\\">Last Name must be at least 2 characters long.</div>\\n          </div>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput type='password' formControlName='password' placeholder='Password' required>\\n          <div *ngIf=\\\"registrationForm.controls['password'].invalid && (registrationForm.controls['password'].dirty || registrationForm.controls['password'].touched)\\\" class='error-msg'>\\n            <div *ngIf=\\\"registrationForm.controls['password'].errors.required\\\">Password is required.</div>\\n            <div *ngIf=\\\"registrationForm.controls['password'].errors.minlength\\\">Password must be at least 5 characters long.</div>\\n            <div *ngIf=\\\"registrationForm.controls['password'].errors.maxlength\\\">Password must be at most 10 characters long.</div>\\n          </div>\\n        </mat-form-field-->\\n\\n      </form>\\n    </mat-card-content>\\n    <mat-card-actions align='right'>\\n        <button mat-raised-button color='accent' class='btn' [disabled]='registrationForm.invalid' (click)='onSubmit()'>Register</button>\\n        <a mat-raised-button routerLink='/login'>Login</a>\\n    </mat-card-actions>\\n  </mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { forbiddenNameValidator } from '../../../util/forbiddenNameValidator';\nimport { UserService } from '../../../service/user.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  registrationForm: FormGroup;\n  submitted: boolean;\n  invalidRegistration: boolean;\n\n  errorMsg: any;\n\n  genders = [\n    { value: 'MALE', type: 'Male' },\n    { value: 'FEMALE', type: 'Female' },\n    { value: 'OTHER', type: 'Other' }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private usrSvc: UserService\n  ) {}\n\n  onSubmit() {\n    console.log('RegComp: User Registration starting ...');\n    this.submitted = true;\n    if (this.registrationForm.invalid) {\n      return;\n    }\n    this.usrSvc.addUser(this.registrationForm.value)\n      .subscribe(\n        user => {\n          console.log(`RegisterUsr:onSubmit user?? ${user}`);\n          if (user === undefined) {\n            this.errorMsg = 'Username ' + this.registrationForm.controls['username'].value + ' exists! Please choose another username.';\n            this.router.navigate(['register']);\n          } else {\n            this.errorMsg = null;\n            this.router.navigate(['list-user']);\n          }\n        }// ,\n        // error => { // Never gets here becuse of UsrSvc error handling!\n        //   this.router.navigate(['register']);\n        //   this.errorMsg = 'Username exists. Please choose another username!';\n        // console.log(`RegisterUsr:onSubmit: FAILED because ${error} : ` + this.registrationForm.controls['username'].value); // 2018-12-11\n        // }\n    );\n  }\n\n  ngOnInit() {\n    this.registrationForm = this.formBuilder.group(\n      {\n        id: [ '' ],\n\n        userId: [ 0 ],\n        username: [ '', [Validators.required, Validators.email] ], // 2018-12-22\n        firstName: [ '', [Validators.required, Validators.minLength(2), forbiddenNameValidator(/bob/i)] ],\n        lastName: [ '', [Validators.required, Validators.minLength(2)] ],\n        password: ['', [Validators.required, Validators.minLength(5)] ],\n        token: [ '' ],\n        addresses: [ null ],\n        roles: [ null ],\n        country: [ '' ],\n        website: [ '' ],\n        phones: [ null ],\n        emails: [ null ],\n        showpassword: '', // bug fix, must add to backend User POJO\n\n        dateOfBirth: [ new Date().toISOString() ], // moment() ],\n        gender: ['OTHER'],\n\n        createDt: [ null ],\n        updateDt: [ null ],\n        updateBy: [ '' ],\n        deleteDt: [ null ]\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXIvYWRkLXVzZXIvYWRkLXVzZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- <mat-card *ngIf='errorMsg'>\\n  <mat-card-content align='center'>\\n    <div *ngIf='errorMsg' [ngClass]=\\\"{'error': errorMsg}\\\">\\n      {{errorMsg}}\\n    </div>\\n  </mat-card-content>\\n</mat-card> -->\\n\\n<mat-card>\\n    <mat-card-title align='center'>\\n\\n      <mat-card *ngIf='errorMsg'>\\n          <mat-card-content align='center'>\\n              <div *ngIf='errorMsg' [ngClass]=\\\"{'error': errorMsg}\\\">{{errorMsg}}</div>\\n          </mat-card-content>\\n      </mat-card>\\n\\n      Add User\\n      <mat-divider></mat-divider>\\n    </mat-card-title>\\n    <mat-card-content align='center'>\\n      <!-- <form [formGroup]='addUserForm' class='login-form-container'> -->\\n      <form [formGroup]='addUserForm' class='normal-form'>\\n        <input type='hidden' formControlName='id'>\\n        <input type='hidden' formControlName='userId'>\\n        <mat-grid-list cols='2' rowHeight='300px'>\\n          <mat-grid-tile>\\n            <div class='controls-container'>\\n              <mat-form-field [ngClass]=\\\"{'error': addUserForm.controls['username'].errors && addUserForm.controls['username'].dirty}\\\">\\n                <input matInput type='text' formControlName='username' placeholder='E-Mail' required>\\n                <div *ngIf=\\\"addUserForm.controls['username'].invalid && (addUserForm.controls['username'].dirty || addUserForm.controls['username'].touched)\\\" class='error-msg'>\\n                  <div *ngIf=\\\"addUserForm.controls['username'].errors.required\\\">Username is required.</div>\\n                  <div *ngIf=\\\"addUserForm.controls['username'].errors.minlength\\\">Username must be at least 2 characters long.</div>\\n                  <div *ngIf=\\\"addUserForm.controls['username'].errors.patternInvalid\\\">Username must be a valid E-Mail address.</div>\\n                </div>\\n              </mat-form-field>\\n              <mat-form-field [ngClass]=\\\"{'error': addUserForm.controls['firstName'].errors && addUserForm.controls['firstName'].dirty}\\\">\\n                <input matInput type='text' formControlName='firstName' placeholder='First Name' required>\\n                <div *ngIf=\\\"addUserForm.controls['firstName'].invalid && (addUserForm.controls['firstName'].dirty || addUserForm.controls['firstName'].touched)\\\" class='error-msg'>\\n                  <div *ngIf=\\\"addUserForm.controls['firstName'].errors.required\\\">First Name is required.</div>\\n                  <div *ngIf=\\\"addUserForm.controls['firstName'].errors.minlength\\\">First Name must be at least 2 characters long.</div>\\n                </div>\\n              </mat-form-field>\\n              <mat-form-field [ngClass]=\\\"{'error': addUserForm.controls['lastName'].errors && addUserForm.controls['lastName'].dirty}\\\">\\n                <input matInput type='text' formControlName='lastName' placeholder='Last Name' required>\\n                <div *ngIf=\\\"addUserForm.controls['lastName'].invalid && (addUserForm.controls['lastName'].dirty || addUserForm.controls['lastName'].touched)\\\" class='error-msg'>\\n                  <div *ngIf=\\\"addUserForm.controls['lastName'].errors.required\\\">Last Name is required.</div>\\n                  <div *ngIf=\\\"addUserForm.controls['lastName'].errors.minlength\\\">Last Name must be at least 2 characters long.</div>\\n                </div>\\n              </mat-form-field>\\n            </div>\\n          </mat-grid-tile>\\n          <mat-grid-tile>\\n            <div class='controls-container'>\\n              <mat-form-field>\\n                <input matInput type='password' formControlName='password' placeholder='Password' required>\\n                <div *ngIf=\\\"addUserForm.controls['password'].invalid && (addUserForm.controls['password'].dirty || addUserForm.controls['password'].touched)\\\" class='error-msg'>\\n                  <div *ngIf=\\\"addUserForm.controls['password'].errors.required\\\">Password is required.</div>\\n                  <div *ngIf=\\\"addUserForm.controls['password'].errors.minlength\\\">Password must be at least 5 characters long.</div>\\n                  <div *ngIf=\\\"addUserForm.controls['password'].errors.maxlength\\\">Password must be at most 10 characters long.</div>\\n                </div>\\n              </mat-form-field>\\n              <div class='add-bottom-padding'>\\n                <!-- <div> -->\\n                <label>Gender : </label>\\n                <mat-radio-group formControlName='gender'>\\n                    <mat-radio-button *ngFor=\\\"let gender of genders\\\" [value]='gender.value'>\\n                        {{gender.type}}\\n                      </mat-radio-button>\\n                  <!-- <mat-radio-button value='MALE'>Male</mat-radio-button>\\n                  <mat-radio-button value='FEMALE'>Female</mat-radio-button>\\n                  <mat-radio-button value='OTHER'>Other</mat-radio-button> -->\\n                </mat-radio-group>\\n              </div>            \\n              <mat-form-field>\\n                <input formControlName='dateOfBirth' matInput [matDatepicker]='picker' placeholder='Date of Birth'>\\n                <mat-datepicker-toggle matSuffix [for]='picker'></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </mat-grid-tile>\\n        </mat-grid-list>        \\n  \\n        <!--mat-form-field [ngClass]=\\\"{'error': addUserForm.controls['username'].errors && addUserForm.controls['username'].dirty}\\\">\\n          <input matInput type='text' formControlName='username' placeholder='E-Mail' required>\\n          <div *ngIf=\\\"addUserForm.controls['username'].invalid && (addUserForm.controls['username'].dirty || addUserForm.controls['username'].touched)\\\" class='error-msg'>\\n            <div *ngIf=\\\"addUserForm.controls['username'].errors.required\\\">Username is required.</div>\\n            <div *ngIf=\\\"addUserForm.controls['username'].errors.minlength\\\">Username must be at least 2 characters long.</div>\\n            <div *ngIf=\\\"addUserForm.controls['username'].errors.patternInvalid\\\">Username must be a valid E-Mail address.</div>\\n          </div>\\n        </mat-form-field>\\n        <mat-form-field [ngClass]=\\\"{'error': addUserForm.controls['firstName'].errors && addUserForm.controls['firstName'].dirty}\\\">\\n          <input matInput type='text' formControlName='firstName' placeholder='First Name' required>\\n          <div *ngIf=\\\"addUserForm.controls['firstName'].invalid && (addUserForm.controls['firstName'].dirty || addUserForm.controls['firstName'].touched)\\\" class='error-msg'>\\n            <div *ngIf=\\\"addUserForm.controls['firstName'].errors.required\\\">First Name is required.</div>\\n            <div *ngIf=\\\"addUserForm.controls['firstName'].errors.minlength\\\">First Name must be at least 2 characters long.</div>\\n          </div>\\n        </mat-form-field>\\n        <mat-form-field [ngClass]=\\\"{'error': addUserForm.controls['lastName'].errors && addUserForm.controls['lastName'].dirty}\\\">\\n          <input matInput type='text' formControlName='lastName' placeholder='Last Name' required>\\n          <div *ngIf=\\\"addUserForm.controls['lastName'].invalid && (addUserForm.controls['lastName'].dirty || addUserForm.controls['lastName'].touched)\\\" class='error-msg'>\\n            <div *ngIf=\\\"addUserForm.controls['lastName'].errors.required\\\">Last Name is required.</div>\\n            <div *ngIf=\\\"addUserForm.controls['lastName'].errors.minlength\\\">Last Name must be at least 2 characters long.</div>\\n          </div>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput type='password' formControlName='password' placeholder='Password' required>\\n          <div *ngIf=\\\"addUserForm.controls['password'].invalid && (addUserForm.controls['password'].dirty || addUserForm.controls['password'].touched)\\\" class='error-msg'>\\n            <div *ngIf=\\\"addUserForm.controls['password'].errors.required\\\">Password is required.</div>\\n            <div *ngIf=\\\"addUserForm.controls['password'].errors.minlength\\\">Password must be at least 5 characters long.</div>\\n            <div *ngIf=\\\"addUserForm.controls['password'].errors.maxlength\\\">Password must be at most 10 characters long.</div>\\n          </div>\\n        </mat-form-field-->\\n\\n      </form>\\n    </mat-card-content>\\n    <mat-card-actions align='right'>\\n        <a mat-raised-button routerLink='/list-user'>Cancel</a>\\n        <button mat-raised-button color='accent' class='btn' [disabled]='addUserForm.invalid' (click)='onSubmit()'>Add User</button>\\n    </mat-card-actions>\\n  </mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../../service/user.service';\nimport { forbiddenNameValidator } from '../../../util/forbiddenNameValidator';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent implements OnInit {\n\n  addUserForm: FormGroup;\n  errorMsg: any;\n\n  genders = [\n    { value: 'MALE', type: 'Male' },\n    { value: 'FEMALE', type: 'Female' },\n    { value: 'OTHER', type: 'Other' }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private usrSvc: UserService\n  ) {}\n\n  ngOnInit() {\n    this.addUserForm = this.formBuilder.group(\n      {\n        id: [ '' ], // TODO test\n\n        userId: [ 0 ],\n        username: [ '', [Validators.required, Validators.email] ], // 2018-12-22\n        firstName: [ '', [Validators.required, Validators.minLength(2), forbiddenNameValidator(/bob/i)] ],\n        lastName: [ '', [Validators.required, Validators.minLength(2)] ],\n        password: ['', [Validators.required, Validators.minLength(5)] ],\n        token: [ '' ],\n        addresses: [ null ],\n        roles: [ null ],\n        country: [ '' ],\n        website: [ '' ],\n        phones: [ null ],\n        emails: [ null ],\n        showpassword: '', // bug fix, must add to backend User POJO\n\n        dateOfBirth: [ new Date().toISOString() ],\n        gender: ['OTHER'],\n\n        createDt: [ null ],\n        updateDt: [ null ],\n        updateBy: [ '' ],\n        deleteDt: [ null ]\n      }\n    );\n  }\n\n  onSubmit() {\n    this.usrSvc.addUser(this.addUserForm.value)\n      .subscribe(\n        user => {\n          console.log(`AddUsr:onSubmit user?? ${user}`); // console.log(`AddUsr:onSubmit user?? ${user.username}`);\n          if (user === undefined) {\n            this.errorMsg = 'Username ' + this.addUserForm.controls['username'].value + ' exists! Please choose another username.';\n            this.router.navigate(['add-user']);\n          } else {\n            this.errorMsg = null;\n            this.router.navigate(['list-user']);\n          }\n        }\n    );\n  }\n\n}\n","module.exports = \"/* .example-month-picker .mat-calendar-period-button {\\r\\n    pointer-events: none;\\r\\n  }\\r\\n  \\r\\n  .example-month-picker .mat-calendar-arrow {\\r\\n    display: none;\\r\\n  } */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdXNlci9lZGl0LXVzZXIvZWRpdC11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztNQU1NIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvdXNlci9lZGl0LXVzZXIvZWRpdC11c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAuZXhhbXBsZS1tb250aC1waWNrZXIgLm1hdC1jYWxlbmRhci1wZXJpb2QtYnV0dG9uIHtcclxuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1tb250aC1waWNrZXIgLm1hdC1jYWxlbmRhci1hcnJvdyB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH0gKi8iXX0= */\"","module.exports = \"<mat-card>\\n  <mat-card-title align='center'>Edit User</mat-card-title>\\n  <mat-card-content align='center'>\\n    <!-- <form [formGroup]='editUserForm' class='login-form-container'> -->\\n    <form [formGroup]='editUserForm' class='normal-form'>\\n      <input type='hidden' formControlName='id'>\\n      <input type='hidden' formControlName='userId'>\\n      <mat-grid-list cols='2' rowHeight='300px'>\\n        <mat-grid-tile>\\n          <div class='controls-container'>\\n            <mat-form-field [ngClass]=\\\"{'error': editUserForm.controls['username'].errors && editUserForm.controls['username'].dirty}\\\">\\n              <input matInput type='text' formControlName='username' placeholder='E-Mail' required readonly>\\n              <div *ngIf=\\\"editUserForm.controls['username'].invalid && (editUserForm.controls['username'].dirty || editUserForm.controls['username'].touched)\\\" class='error-msg'>\\n                <div *ngIf=\\\"editUserForm.controls['username'].errors.required\\\">Username is required.</div>\\n                <div *ngIf=\\\"editUserForm.controls['username'].errors.minlength\\\">Username must be at least 2 characters long.</div>\\n                <div *ngIf=\\\"editUserForm.controls['username'].errors.patternInvalid\\\">Username must be a valid E-Mail address.</div>\\n              </div>\\n            </mat-form-field>\\n            <mat-form-field [ngClass]=\\\"{'error': editUserForm.controls['firstName'].errors && editUserForm.controls['firstName'].dirty}\\\">\\n              <input matInput type='text' formControlName='firstName' placeholder='First Name' required>\\n              <div *ngIf=\\\"editUserForm.controls['firstName'].invalid && (editUserForm.controls['firstName'].dirty || editUserForm.controls['firstName'].touched)\\\" class='error-msg'>\\n                <div *ngIf=\\\"editUserForm.controls['firstName'].errors.required\\\">First Name is required.</div>\\n                <div *ngIf=\\\"editUserForm.controls['firstName'].errors.minlength\\\">First Name must be at least 2 characters long.</div>\\n              </div>\\n            </mat-form-field>\\n            <mat-form-field [ngClass]=\\\"{'error': editUserForm.controls['lastName'].errors && editUserForm.controls['lastName'].dirty}\\\">\\n              <input matInput type='text' formControlName='lastName' placeholder='Last Name' required>\\n              <div *ngIf=\\\"editUserForm.controls['lastName'].invalid && (editUserForm.controls['lastName'].dirty || editUserForm.controls['lastName'].touched)\\\" class='error-msg'>\\n                <div *ngIf=\\\"editUserForm.controls['lastName'].errors.required\\\">Last Name is required.</div>\\n                <div *ngIf=\\\"editUserForm.controls['lastName'].errors.minlength\\\">Last Name must be at least 2 characters long.</div>\\n              </div>\\n            </mat-form-field>\\n          </div>\\n        </mat-grid-tile>\\n        <mat-grid-tile>\\n          <div class='controls-container'>            \\n            <mat-form-field>\\n              <mat-checkbox class='example-margin' formControlName='showpassword' (click)='hideShowPassword()'>Show password</mat-checkbox>\\n              <input matInput type={{inputType}} formControlName='password' placeholder='Password' required>\\n            </mat-form-field>\\n\\n            <!-- <label>Gender</label> -->\\n            <div class='add-bottom-padding'>\\n            <!-- <div> -->\\n              <label>Gender: </label>\\n              <mat-radio-group formControlName='gender'>\\n                  <mat-radio-button *ngFor=\\\"let gender of genders\\\" [value]='gender.value'>\\n                    {{gender.type}}\\n                  </mat-radio-button>\\n              </mat-radio-group>\\n            </div>\\n            <mat-form-field>\\n              <input formControlName='dateOfBirth' matInput [matDatepicker]='myDatepicker' placeholder='Date of Birth'>\\n              <mat-datepicker-toggle matSuffix [for]='myDatepicker'></mat-datepicker-toggle>\\n              <mat-datepicker #myDatepicker></mat-datepicker>\\n            </mat-form-field>\\n\\n\\n          </div>\\n        </mat-grid-tile>\\n      </mat-grid-list>\\n\\n      <!--mat-form-field [ngClass]=\\\"{'error': editUserForm.controls['username'].errors && editUserForm.controls['username'].dirty}\\\">\\n        <input matInput type='text' formControlName='username' placeholder='E-Mail' required>\\n        <div *ngIf=\\\"editUserForm.controls['username'].invalid && (editUserForm.controls['username'].dirty || editUserForm.controls['username'].touched)\\\" class='error-msg'>\\n          <div *ngIf=\\\"editUserForm.controls['username'].errors.required\\\">Username is required.</div>\\n          <div *ngIf=\\\"editUserForm.controls['username'].errors.minlength\\\">Username must be at least 2 characters long.</div>\\n          <div *ngIf=\\\"editUserForm.controls['username'].errors.patternInvalid\\\">Username must be a valid E-Mail address.</div>\\n        </div>\\n      </mat-form-field>\\n      <mat-form-field [ngClass]=\\\"{'error': editUserForm.controls['firstName'].errors && editUserForm.controls['firstName'].dirty}\\\">\\n        <input matInput type='text' formControlName='firstName' placeholder='First Name' required>\\n        <div *ngIf=\\\"editUserForm.controls['firstName'].invalid && (editUserForm.controls['firstName'].dirty || editUserForm.controls['firstName'].touched)\\\" class='error-msg'>\\n          <div *ngIf=\\\"editUserForm.controls['firstName'].errors.required\\\">First Name is required.</div>\\n          <div *ngIf=\\\"editUserForm.controls['firstName'].errors.minlength\\\">First Name must be at least 2 characters long.</div>\\n        </div>\\n      </mat-form-field>\\n      <mat-form-field [ngClass]=\\\"{'error': editUserForm.controls['lastName'].errors && editUserForm.controls['lastName'].dirty}\\\">\\n        <input matInput type='text' formControlName='lastName' placeholder='Last Name' required>\\n        <div *ngIf=\\\"editUserForm.controls['lastName'].invalid && (editUserForm.controls['lastName'].dirty || editUserForm.controls['lastName'].touched)\\\" class='error-msg'>\\n          <div *ngIf=\\\"editUserForm.controls['lastName'].errors.required\\\">Last Name is required.</div>\\n          <div *ngIf=\\\"editUserForm.controls['lastName'].errors.minlength\\\">Last Name must be at least 2 characters long.</div>\\n        </div>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-checkbox class='example-margin' formControlName='showpassword' (click)='hideShowPassword()'>Show password</mat-checkbox>\\n        <input matInput type={{inputType}} formControlName='password' placeholder='Password' required>\\n      </mat-form-field-->\\n      \\n    </form>\\n  </mat-card-content>\\n  <mat-card-actions align='right'>\\n      <a mat-raised-button routerLink='/list-user'>Cancel</a>\\n      <button mat-raised-button color='accent' class='btn' [disabled]='editUserForm.invalid' (click)='onSubmit()'>Update User</button>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\n\nimport { User } from '../../../model/user';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../../service/user.service';\nimport { first } from 'rxjs/operators';\nimport { forbiddenNameValidator } from '../../../util/forbiddenNameValidator';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.css']\n})\nexport class EditUserComponent implements OnInit {\n\n  user: User;\n  editUserForm: FormGroup;\n  inputType: string;\n\n  localeString: string;\n\n  genders = [\n    { value: 'MALE', type: 'Male' },\n    { value: 'FEMALE', type: 'Female' },\n    { value: 'OTHER', type: 'Other' }\n  ];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.inputType = 'password';\n    const id = localStorage.getItem('editUserId');\n\n    if (!id) {\n      alert('Invalid action.');\n      this.router.navigate(['list-user']);\n      return;\n    }\n\n    this.editUserForm = this.formBuilder.group(\n      {\n        id: [ '' ],\n\n        userId: [ 0 ],\n        username: [ '', [Validators.required, Validators.email] ], // 2018-12-22\n        firstName: [ '', [Validators.required, Validators.minLength(2), forbiddenNameValidator(/bob/i)] ],\n        lastName: [ '', [Validators.required, Validators.minLength(2)] ],\n        password: ['', [Validators.required, Validators.minLength(5)] ],\n        token: [ '' ],\n        addresses: [ null ],\n        roles: [ null ],\n        country: [ '' ],\n        website: [ '' ],\n        phones: [ null ],\n        emails: [ null ],\n        showpassword: 'text', // bug fix, must add to backend User POJO\n\n        dateOfBirth: [ new Date().toISOString() ], // moment() ],\n        gender: ['OTHER'],\n\n        createDt: [ null ],\n        updateDt: [ null ],\n        updateBy: [ '' ],\n        deleteDt: [ null ]\n      }\n    );\n\n    console.log('%%% User Id is >' + id + '<');\n\n    this.userService.getUser(id)\n      .subscribe(\n        user => {\n          console.log('EditUsr: ngOnInit ' + JSON.stringify(user));\n          this.editUserForm.setValue(user);\n          console.log('DoB : ' + new Date(user.dateOfBirth).toISOString() );\n          this.editUserForm.controls['dateOfBirth'].setValue(new Date(user.dateOfBirth).toISOString());\n        }\n      );\n  }\n\n  onSubmit() {\n    this.userService.updateUser(this.editUserForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          console.log('Edit:Usr onSubmit ' + JSON.stringify(data));\n          this.router.navigate(['list-user']);\n        },\n        error => {\n          alert(error);\n        }\n      );\n  }\n\n  hideShowPassword() {\n    if (this.inputType === 'password') {\n      this.inputType = 'text';\n    } else if (this.inputType === 'text') {\n      this.inputType = 'password';\n    }\n  }\n\n  onClear() {\n    this.editUserForm.reset();\n    this.initFormGroup();\n  }\n  initFormGroup() {\n    this.editUserForm.setValue(\n      {\n        id: '',\n\n        userId: 0,\n        username: '',\n        firstName: '',\n        lastName: '',\n        password: '',\n        token: '',\n        addresses: null,\n        roles: null,\n        country: '',\n        website: '',\n        phones: null,\n        emails: null,\n        showpassword: 'text', // bug fix, must add to backend User POJO\n\n        dateOfBirth: new Date(),\n        gender: 'OTHER',\n\n        createDt: null,\n        updateDt: null,\n        updateBy: '',\n        deleteDt: null\n      }\n    );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXIvbGlzdC11c2VyL2xpc3QtdXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card>\\n    <mat-card-title align='center'>\\n        <mat-card *ngIf='errorMsg'>\\n            <mat-card-content align='center'>\\n                <div *ngIf='errorMsg' [ngClass]=\\\"{'error': errorMsg}\\\">{{errorMsg}}</div>\\n            </mat-card-content>\\n        </mat-card>\\n        User List\\n        <br>\\n        <mat-divider></mat-divider>\\n    </mat-card-title>\\n    <mat-card-content align='center'>\\n        <!-- starting mat table -->\\n        <div *ngIf='dataSource.data.length > 0'>\\n            <div class='example-header'>\\n                <mat-form-field>\\n                    <input matInput (keyup)='applyFilter($event.target.value)' placeholder='Filter'>\\n                </mat-form-field>\\n            </div>\\n            <div class='example-container mat-elevation-z8'>\\n                <mat-table [dataSource]='dataSource' matSort>\\n                    <ng-container matColumnDef='userId'>\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\\n                        <mat-cell *matCellDef='let user'>{{user.userId}}</mat-cell>\\n                    </ng-container>\\n                    <ng-container matColumnDef='firstName'>\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>First Name</mat-header-cell>\\n                        <mat-cell *matCellDef='let user'>{{user.firstName}}</mat-cell>\\n                    </ng-container>\\n                    <ng-container matColumnDef='lastName'>\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</mat-header-cell>\\n                        <mat-cell *matCellDef='let user'>{{user.lastName}}</mat-cell>\\n                    </ng-container>\\n                    <ng-container matColumnDef='username'>\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>User Name</mat-header-cell>\\n                        <mat-cell *matCellDef='let user'>{{user.username}}</mat-cell>\\n                    </ng-container>    \\n                    <ng-container matColumnDef=\\\"password\\\">\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> Password </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let user\\\"> {{user.password}} </mat-cell>\\n                    </ng-container>        \\n        \\n                    <ng-container matColumnDef=\\\"edit\\\">\\n                        <mat-header-cell *matHeaderCellDef> Edit </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let user\\\">\\n                            <button mat-raised-button (click)='editUser(user)'>\\n                                <mat-icon color='primary'>edit</mat-icon>\\n                            </button>\\n                        </mat-cell>\\n                    </ng-container>\\n            \\n                    <ng-container matColumnDef=\\\"delete\\\">\\n                        <mat-header-cell *matHeaderCellDef> Delete </mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let user\\\">\\n                            <button mat-raised-button (click)='deleteUser(user)'>\\n                                <mat-icon color='accent'>\\n                                    <i class=\\\"material-icons\\\">remove_circle_outline</i>\\n                                </mat-icon>\\n                            </button>\\n                        </mat-cell>\\n                    </ng-container>\\n        \\n                    <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n                    <mat-row *matRowDef='let user; columns: displayedColumns;'></mat-row>\\n                </mat-table>\\n        \\n                <mat-paginator [pageSizeOptions]='[5, 10, 15]'></mat-paginator>\\n            </div>\\n        </div>        \\n        <!-- ending mat table-->\\n    </mat-card-content>\\n    <!-- <mat-card-actions align='right'> -->\\n    <mat-card-actions align='center'>\\n        <!-- <button mat-raised-button color='accent' class='btn' (click)='addUser()'>Add User</button>\\n        <a mat-raised-button routerLink='/register'>Register</a> -->\\n\\n        <mat-card>\\n            <mat-card-content align='right'>\\n                <button mat-raised-button color='accent' class='btn' (click)='addUser()'>Add User</button>\\n                <a mat-raised-button routerLink='/register'>Register</a>\\n            </mat-card-content>\\n        </mat-card>\\n        \\n    </mat-card-actions>\\n</mat-card>\"","import { Component, ViewChild } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { UserService } from '../../../service/user.service';\nimport { User } from '../../../model/user';\n\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-list-user',\n  templateUrl: './list-user.component.html',\n  styleUrls: ['./list-user.component.css']\n})\nexport class ListUserComponent {\n\n  dataSource: MatTableDataSource<User>;\n  displayedColumns = ['userId', 'firstName', 'lastName', 'username', 'edit', 'delete'];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  errorMsg: any;\n\n  constructor(\n    private router: Router,\n    private userSvc: UserService,\n    private authSvc: AuthService\n  ) {\n      this.populateUserTable();\n  }\n\n  private populateUserTable() {\n    const users: User[] = [];\n      this.userSvc.getUsers()\n        .subscribe(usrs => this.dataSource.data = usrs);\n      this.dataSource = new MatTableDataSource(users);\n  }\n\n  /**\n   * Set the paginator and sort after the view init since this component will\n   * be able to query its view for the initialized paginator and sort.\n   */\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  deleteUser(user: User): void {\n    if (confirm('Are you sure you want to delete this user?')) {\n      console.log('LstUsr: logusr? ' + (this.authSvc.loggedInUser !== null) +\n        ' loggedin ' + this.authSvc.loggedInUser.username +\n        ' uname ' + user.username +\n        ' equal ' + (this.authSvc.loggedInUser.username === user.username) +\n        ' ?? ' + ((this.authSvc.loggedInUser !== null) && (this.authSvc.loggedInUser.username === user.username))\n      );\n      if ((this.authSvc.loggedInUser !== null) && (this.authSvc.loggedInUser.username === user.username)) {\n        this.errorMsg = 'Sorry! Cannot delete yourself! Please contact admin.';\n        this.router.navigate(['list-user']);\n      } else {\n        this.errorMsg = null;\n        this.userSvc.deleteUser(user)\n          .subscribe(\n            data => {\n              this.populateUserTable();\n              console.log(`LstUsr:delete ${data} usrId : ` + user.userId);\n              this.router.navigate(['list-user']);\n            }\n          );\n      }\n    }\n  }\n\n  editUser(user: User): void {\n    console.log('ListUsr:editUser userId >' + user.userId + '<');\n    localStorage.removeItem('editUserId');\n    if (user.userId !== undefined) {\n      localStorage.setItem('editUserId', user.id);\n    }\n    this.router.navigate(['edit-user']);\n  }\n\n  addUser(): void {\n    this.router.navigate(['add-user']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { CanActivate } from '@angular/router/src/interfaces';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router/src/router_state';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private router: Router) {}\n\n  // Check if the user is logged in before calling http\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    if (localStorage.getItem('currentUser')) {\n      return true;\n    }\n    this.router.navigate(['/login'],\n      {\n        queryParams: { returnUrl: state.url }\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { tap, catchError } from 'rxjs/operators';\nimport { User } from '../model/user';\nimport { of, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private loginUrl = 'api/user/login';\n  private _loggedInUser?: User;\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getHeaders(): { headers: HttpHeaders } {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\n      })\n    };\n    return httpOptions;\n  }\n\n  get loggedInUser(): User {\n    return this._loggedInUser;\n  }\n  set loggedInUser(user: User) {\n      this._loggedInUser = user;\n  }\n\n  login(username: string, password: string) {\n\n    return this.http.post<User>(this.loginUrl, JSON.stringify({ username: username, password: password }), this.getHeaders())\n      .pipe(\n        tap(\n          (user: User) => {\n            console.log('Login: You are trying to log in as ' + username + ' pw  ' + password + ' null data? ' + (user === null) +\n            ' undefined?? ' + (user === undefined) + '!! ??? ' + ((user == null) || (user === undefined)));\n            if (\n              (user == null) ||\n              (user === undefined)\n            ) {\n              this.router.navigate(['login']);\n            } else {\n              this.log(`Logged in user username=${username} password${password}`);\n              localStorage.setItem('currentUser', JSON.stringify(user));\n            }\n          }\n        ),\n        catchError(this.handleError<User>('login'))\n      );\n  }\n\n  logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    console.log('AuthSvc: logout currentUser ' + localStorage.getItem('currentUser'));\n    this.loggedInUser = null; // 2018-12-24\n  }\n\n  private log(message: string) {\n    console.log('authSvc : ' + message + '');\n  }\n\n  public getToken(): string {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    const token = currentUser && currentUser.token;\n    return token ? token : '';\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      if (error.status === 401) {\n        localStorage.removeItem('currentUser');\n        this.router.navigateByUrl('/login');\n        console.log('@@@@ Authentication error');\n      } else if (error.status === 403) {\n        console.log('%%%% Duplicate user error');\n      } else if (error.status === 500) {\n        console.log('#### Error 500 happened. Ooops!');\n      }\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  // https://itnext.io/angular-tutorial-implement-refresh-token-with-httpinterceptor-bfa27b966f57\n  refreshAccessToken() { this.log('Refresh token called. Not yet implemented!'); }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { User } from '../model/user';\nimport { AuthService } from './auth.service';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private usrUrl = 'api/user';\n\n  constructor(\n    private http: HttpClient,\n    private authSvc: AuthService,\n    private router: Router\n  ) {}\n\n  getHeaders(): { headers: HttpHeaders } {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n        'Authorization': 'Bearer ' + this.authSvc.getToken()\n      })\n    };\n    return httpOptions;\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.usrUrl, this.getHeaders())\n    .pipe(\n      tap(users => this.log(`Fetched all ${users.length} users.`)),\n      catchError(this.handleError('getUsers', []))\n    );\n  }\n\n  deleteUser(user: User | number): Observable<User> {\n    const id = typeof user === 'number' ? user : user.id;\n    const url = `${this.usrUrl}/${id}`;\n\n    return this.http.delete<User>(url, this.getHeaders()).pipe(\n      tap(_ => this.log(`Deleted user userId=${id}`)),\n      catchError(this.handleError<User>('deleteUser'))\n    );\n  }\n\n  getUser(id: string): Observable<User> {\n    const url = `${this.usrUrl}/${id}`;\n    return this.http.get<User>(url, this.getHeaders()).pipe(\n      tap(_ => this.log(`Fetched one user id=${id}`)),\n      tap((usr: User) => this.log(`Fetched one user w/ dateOfBirth=${usr.dateOfBirth}`)),\n      catchError(this.handleError<User>(`getUser id=${id}`))\n    );\n  }\n\n  getUserByUsername(username: string): Observable<User> {\n    const url = `${this.usrUrl}/username/${username}`;\n    return this.http.get<User>(url, this.getHeaders())\n      .pipe(\n        tap(_ => this.log(`Fetched user by username=${username}`)),\n        catchError(this.handleError<User>(`getUserByUsername username=${username}`))\n      );\n  }\n\n  updateUser(user: User): Observable<any> {\n    return this.http.put(this.usrUrl, user, this.getHeaders()).pipe(\n      tap(_ => this.log(`Updated user userId=${user.userId}`)),\n      catchError(this.handleError<any>('updateUser'))\n    );\n  }\n\n  addUser(user: User): Observable<User> {\n    return this.http.post<User>(this.usrUrl, user, this.getHeaders()).pipe(\n      tap((usr: User) => this.log(`Added user w/ userId=${usr.userId}`)),\n      catchError(this.handleError<User>('addUser'))\n    );\n  }\n\n  /* GET users whose name contains search term */ // TODO Test and use this\n  searchUsers(term: string): Observable<User[]> {\n    if (!term.trim()) {\n      // if not search term, return empty user array.\n      return of([]);\n    }\n    return this.http.get<User[]>(this.usrUrl + `/search?name=${term}`, this.getHeaders()).pipe(\n      tap(_ => this.log(`Found user(s) matching \"${term}\"`)),\n      catchError(\n        this.handleError<User[]>('searchUsers', [])\n      )\n    );\n  }\n\n  private log(message: string) {\n    console.log('usrSvc : ' + message + '');\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      if (error.status === 401) {\n        localStorage.removeItem('currentUser');\n        // this.router.navigateByUrl('/login');\n        console.log('@@@@@ Trapped authentication error');\n      } else if (error.status === 403) {\n        console.log('%%%% Trapped duplicate user error');\n      } else if (error.status === 500) {\n        console.log('#### Error 500 happened. Ooops!');\n        this.authSvc.logout();\n        this.router.navigateByUrl('/login');\n      }\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n    HttpErrorResponse,\n    HttpResponse\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\n// import { tap, catchError } from 'rxjs/operators';\n\nimport { Observable, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor(private injector: Injector) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // return next.handle(request);\n        //////////////////////////\n        // const idToken = localStorage.getItem('id_token');\n\n        // if (idToken) {\n        //     const cloned = request.clone({\n        //         headers: request.headers.set('Authorization',\n        //             'Bearer ' + idToken)\n        //     });\n\n        //     return next.handle(cloned);\n        // } else {\n        //     return next.handle(request);\n        // }\n        ////////////////////////\n\n        // Let's then break down how this code works line by line:\n        // 1. we first start by retrieving the JWT string from Local Storage directly\n        // 2. then we are going to check if the JWT is present\n        // 3. if the JWT is not present, then the request goes through to the server unmodified\n        // 4. if the JWT is present, then we will clone the HTTP headers, and add an extra Authorization header, which will contain the JWT\n\n        ///////////////////////////////\n        return next.handle(request)\n            .pipe(\n                tap(\n                    (event: HttpEvent<any>) => {\n                        if (event instanceof HttpResponse) {\n                            // if the token is valid\n                        }\n                    },\n                    (error: any) => {\n                        // if the token has expired.\n                        if (error instanceof HttpErrorResponse) {\n                            if (error.status === 401) {\n                                // this is where you can do anything like navigating\n                                this.router.navigateByUrl('/login'); // send user to login 2018-12-24\n                            }\n                            if (error.status === 403) {\n                                // this is where you can do anything like navigating\n                                this.router.navigateByUrl('/register'); // send user to registration page 2018-12-24\n                            }\n                            if (error.status === 500) {\n                                this.router.navigateByUrl('/login');\n                            }\n                            console.error(\n                                `ErrIntercept: Backend returned code ${error.status}, ` +\n                                `body was: ${error.error}`\n                            );\n                        }\n                    }\n                )\n            );\n            ////////////////\n    }\n\n    public get router(): Router { // this creates router property on your service.\n        return this.injector.get(Router);\n    }\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport function forbiddenNameValidator(nameRe: RegExp): ValidatorFn {\r\n    return (control: AbstractControl): {[key: string]: any} => {\r\n        const forbidden = nameRe.test(control.value);\r\n        return forbidden ? {'forbiddenName': {value: control.value}} : null;\r\n    };\r\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material';\nimport { AppDateAdapter, APP_DATE_FORMATS } from './app-date-adapter';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\n\n/** Http Interceptor providers in outside-in order */\n\nexport const httpInterceptorProviders = [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n];\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'MM-DD-YYYY', // 'MM/YYYY',\n    },\n    display: {\n        dateInput: 'MM-DD-YYYY', // 'MM/YYYY',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\nexport const datePickerProviders = [\n    // { provide: DateAdapter, useClass: AppDateAdapter },\n    // { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n];\n\nexport class Index {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error('Main: >>> : ' + err));\n"],"sourceRoot":""}